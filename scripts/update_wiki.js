#! usr/bin/env node

// Includes snippets for updating the curriculum wiki
const Curriculum = require('../lib/curriculum');
const GitHub = require('../lib/networking/github');

const basePath = process.argv[2];

const remote = "https://github.com/enkidevs/curriculum/tree/master/";

const git = new GitHub(basePath);
const curriculum = new Curriculum(git);
const fs = require('fs');
const path = require('path');
let curriculumStats = curriculum.getStats();


/**
 * Writes all Topic pages for wiki in `curriculum.wiki` local directory
 *
 */
function writeTopicPages() {
  console.log(curriculum.topics);
  for (let topicName in curriculum.topics) {
    let topic = curriculum.topics[topicName];
    let data = topic.renderTopicWikiPage();
    fs.writeFileSync(path.join(basePath, `curriculum.wiki/${toTitleCase(topicName)}-Topic.md`), data);
  }

}


/**
 * Updates LOT in local directory.. https://github.com/enkidevs/curriculum/wiki/List-of-Topics
 *
 */
function updateTopicsTable() {
  let data = "";

  // Hard-coded header and table layout.
  data += `These are the topics that currently exist, with planning and discussion boards for each.\n
Topic | Subtopics | Workouts | Insights | PQ | RQ | Standards | Assessments | Stubs
--- | --- | --- | --- | --- | --- | --- | --- | ---
<!-- AUTOGENERATED TABLE: LIST_OF_TOPICS -->
`;

  // Parse topic obj into table row
  for (let topic in curriculum.topics) {
    data += curriculum.topics[topic].renderTopicStatsRow()
  }
  data += "<!-- END AUTOGENERATED TABLE: LIST_OF_TOPICS -->\n\n\n";
  // return header + table
  return data;
}
